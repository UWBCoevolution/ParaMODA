<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QBKRXhpZgAATU0AKgAAAAgAAwEaAAUAAAABAAAAMgEbAAUAAAAB
        AAAAOgEoAAMAAAABAAIAAAAAAAAAAABIAAAAAQAAAEgAAAAB/+IN+ElDQ19QUk9GSUxFAAEBAAAN6GFw
        cGwCAAAAbW50clJHQiBYWVogB9UACwAJAAAADQA6YWNzcEFQUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOclhZWgAAASwAAAAUZ1hZWgAAAUAAAAAUYlhZWgAAAVQAAAAUd3RwdAAAAWgAAAAUY2hhZAAA
        AXwAAAAsclRSQwAAAagAAAAOZ1RSQwAAAbgAAAAOYlRSQwAAAcgAAAAOdmNndAAAAdgAAAMSbmRpbgAA
        BOwAAAY+ZGVzYwAACywAAABkZHNjbQAAC5AAAAH+bW1vZAAADZAAAAAoY3BydAAADbgAAAAtWFlaIAAA
        AAAAAHEwAABEvAAAD2VYWVogAAAAAAAAYbkAAKGYAAApKFhZWiAAAAAAAAAj7QAAGccAAJqYWFlaIAAA
        AAAAAPNSAAEAAAABFs9zZjMyAAAAAAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbGN1
        cnYAAAAAAAAAAQHNAABjdXJ2AAAAAAAAAAEBzQAAY3VydgAAAAAAAAABAc0AAHZjZ3QAAAAAAAAAAAAD
        AQAAAQADBAYICQsMDg8REhMVFxgaGxweHyEiJCUnKCorLC4vMTIzNTY4OTo8PT5AQUJERUdISUpMTU5Q
        UVJUVVZYWVpbXF5fYGFiY2VmZ2hpamttbm9wcXJzdHV3eHl6e3x9fn+AgoOEhYaHiImKi4yNjo+QkZKT
        lJWWl5iZmpucnZ6foKGio6SlpqanqKmqq6ysra6vsLGxsrO0tba2t7i5urq7vL29vr/AwMHCw8PExcbG
        x8jJycrLy8zNzs7P0NDR0tLT1NTV1tbX19jZ2drb29zd3d7e3+Dg4eLi4+Tk5ebm5+jp6err6+zt7u7v
        8PHx8vP09fb29/j5+vr7/P3+/v8AAwUHCAoLDQ8QEhMVFhgaGx0eICEjJCYnKSorLS4wMTM0NTc4OTs8
        PT9AQUNERUZISUpLTU5PUFJTVFVWWFlaW1xeX2BhYmNkZWZoaWprbG1ub3Bxc3R1dnd4eXp7fH1+f4CB
        goOEhYaHiImKi4yNjo+QkZKTlJWWl5eYmZqbnJ2en6CgoaKjpKWmpqeoqaqrrK2trq+wsbKys7S1tre3
        uLm6u7y8vb6/wMHBwsPExcXGx8jJycrLzM3Nzs/Q0dHS09PU1dbW19jY2dra29zd3d7f3+Dh4uLj5OTl
        5ufn6Onp6uvs7O3u7u/w8fHy8/T09fb29/j5+fr7/Pz9/v7/AAIDBAUGCAkKCwwNDg8QERITFBUWFxgZ
        GhscHR4fICEiIyQlJicoKSorLC0uLzAxMjM0NTU2Nzg5Ojs8PT4/QEFCQ0RFRkdISUpKS0xNTk9QUVJT
        VFRVVldYWVpbXF1dXl9gYWJjZGRlZmdoaWpqa2xtbm9wcHFyc3R1dXZ3eHl6e3t8fX5/gIGCgoOEhYaH
        iIiJiouMjY6Oj5CRkpOUlJWWl5iZmZqbnJ2enp+goaKjpKSlpqeoqamqq6ytrq6vsLGys7S1tba3uLm6
        uru8vb6/v8DBwsPExcXGx8jJysvMzc7P0dLT1NXX2Nnb3d7g4uPl5+nr7O7x8/X3+fz+/wAAbmRpbgAA
        AAAAAAY2AACNngAAV2UAAE0oAACGwgAAKCEAABpHAABQDQAAVDkAAvMzAAKj1wABoUcAAwEAAAIAAAAA
        AAEAAwAIAA4AFgAfACoANgBEAFMAZAB1AIcAmwCzAMwA5AD+ARkBNgFSAW8BjgGvAdAB8wIYAj4CZQKR
        ArsC5QMSAz8DbAObA8sD/AQvBGEElQTLBQMFQAV/BbsF+AY2BnMGswb1BzcHeQe+CAUITAiVCOUJOQmF
        CdUKJQp2CskLHgtzC8kMIAx4DNENLA2cDf0OXQ6+DyAPgw/oEE8QsxEdEYcR8hJeEtATPxOvFCMUmhUa
        FZ0WIhaqFzIXuxhIGNgZahn8GpAbJxu9HFUc6R2FHiEevR9bH/0goSFJIfQimCNBI/EkoSVSJgQmtSdn
        KB8o3CmSKlIrFSvVLJktYS4pLvEvvjCPMWAyMzMHM9w0vjWVNnc3Wjg+OSI6BjrsO9k8yj27Pqw/nkCU
        QYtCg0OBRIVFiUaMR45Imkm6SutMFk1VTotPwFD5UjlTg1TMVhVXXlivWgFbWFy3Xh9fhWDqYlRj02VH
        Zr5oQGnKa1Fs5G52cBVxtHNYdQR2tnhpeh97532uf32BTIMbhO2G0oi5ipyMi46EkHuSb5RolnSYlprc
        nTmfj6HtpEamqakIq12txbAksoq08rdYuba8Fb54wN3DPMWYx/bKTsyrzvzRVdOq1fvYR9qV3N/eu+EJ
        41HlOOdp6a/rtO3L8BTyOfQy9nn4wfqh/QT//wAAAAAAAQADAAYADAASABoAJAAvADsASABXAGcAdwCJ
        AJwAsADFANwA9AEOASkBRAFgAX0BnAG8Ad0CAAIkAkoCcAKWAr4C6AMUA0EDbgOdA80D/wQyBGUEmgTR
        BQoFQwV9BboF+QY4BncGuwcAB0UHiQfSCBwIaAi1CQMJUwmlCfsKTwqmCv8LWgu2DBMMcAzPDS8NlA37
        DmMOyw80D54QDBB5EOgRWRHMEkAStxMvE6cUIhShFSUVqhYzFr0XSRfVGGUY+RmPGiQavRtYG/IcjR0q
        HcoeaR8LH7EgWyEHIbYiZCMTI8ckfyU3JfAmqidkKCYo6ymqKnYrRSwMLN4tsy6DL1owNjEUMfMy1DO3
        NKM1ijZ5N2w4XzlROkQ7ODw6PTs+PD89QEJBSUJRQ19Ec0WIRpxHr0jKSfpLNUxsTaxO6FAhUWJSolPz
        VT1WhlfSWR9ablvFXSFegF/dYTdimGQJZW9m12hIab9rLWyobiRvo3Ercqd0MXW/d0943np0fBF9r39V
        gPmCm4RAhfCHp4laiw+M0Y6YkF2SHZPclbWXlJl/m5mdrp/Boduj7qYVqDSqVax6rp2wxrL2tSm3X7mP
        u8O9/MA+woHEuMb+yTrLhs3I0BXSZdSz1vzZR9uf3fDgSeKd5PHnUemg6/vuV/C/8yL1ifft+lz82///
        AAAAAQADAAkAEwAgAC8AQgBXAG8AiQCpANEA9AEaAUIBawGWAcQB9QIoAl4CqgLkAyIDYQOiA+UEKwRw
        BLoFBwVzBcYGGgZuBscHIgd9B9sIPAifCSwJlQoBCm8K3wtTC8cMPQy0DTMN4A5hDuQPaA/vEHgRAxGQ
        EiAStBNJE+AUfBUdFcAWaxcTF78YbxkkGdoakxtPHAocxh2GHkYfCB/PIJshayI7Iwsj4SS7JZUmcSdH
        KC0pESn3KuMr0CzBLbYupS+hMJ8xnjKfM6M0sDW2Nsk33DjwOgQ7GDw6PV0+gD+kQNBB8kMlRFxFlUbP
        R/5JN0ptS6JM2k4UT09Qf1HBUwZUT1WXVtpYK1l0WsJcGF1zXtNgKWGDYulkU2W1ZxtojGn9a2xs425Y
        b9RxU3LMdE511HdbeOB6a3v7fY1/JIC6gkyD34V5hxuIvYpai/+NrY9bkQaSq5RWlg2XuplSmvKci55C
        n/ChpaNipSmm9qi9qpGsbK5FsByx77PDtZ63cLlNuxi85761wHXCJ8PWxYjHM8jLymbL/M1/zvnQcdHk
        01HUvdYU12XYttoD20Xcfd2N3oLfn+DF4eXjCeQW5PPl4ub36AHpB+oP6wHrzOye7Znuku+H8HPxWPIo
        8unzs/SX9Xr2WPc1+A/45vmg+lr7Ivvy/Mr9q/63//8AAGRlc2MAAAAAAAAACkNvbG9yIExDRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAA8AAAAMaXRJVAAAABQAAADEZnJGUgAAAEIAAADYbmJOTwAA
        ABIAAAEaZXNFUwAAABIAAAEsZmlGSQAAABAAAAE+cHRQVAAAABgAAAFOemhUVwAAAA4AAAFmamFKUAAA
        AA4AAAF0bmxOTAAAABYAAAGCZGVERQAAABAAAAGYa29LUgAAAAwAAAGoZW5VUwAAABIAAAG0c3ZTRQAA
        ABAAAAHGZGFESwAAABwAAAHWemhDTgAAAAwAAAHyAEwAQwBEACAAYwBvAGwAbwByAGkAyQBjAHIAYQBu
        ACAA4AAgAGMAcgBpAHMAdABhAHUAeAAgAGwAaQBxAHUAaQBkAGUAcwAgAGMAbwB1AGwAZQB1AHIARgBh
        AHIAZwBlAC0ATABDAEQATABDAEQAIABjAG8AbABvAHIAVgDkAHIAaQAtAEwAQwBEAEwAQwBEACAAYwBv
        AGwAbwByAGkAZABvX2mCcm2yZnaYb3k6VmgwqzDpMPwAIABMAEMARABLAGwAZQB1AHIAZQBuAC0ATABD
        AEQARgBhAHIAYgAtAEwAQwBEzuy37AAgAEwAQwBEAEMAbwBsAG8AcgAgAEwAQwBEAEYA5AByAGcALQBM
        AEMARABMAEMARAAtAGYAYQByAHYAZQBzAGsA5gByAG1faYJyACAATABDAEQAAG1tb2QAAAAAAAAGEAAA
        nCoAAAAAuE1yAAAAAAAAAAAAAAAAAAAAAAB0ZXh0AAAAAENvcHlyaWdodCBBcHBsZSBDb21wdXRlciwg
        SW5jLiwgMjAwNQAAAAD/2wBDAAICAgICAQICAgICAgIDAwYEAwMDAwcFBQQGCAcICAgHCAgJCg0LCQkM
        CggICw8LDA0ODg4OCQsQEQ8OEQ0ODg7/2wBDAQICAgMDAwYEBAYOCQgJDg4ODg4ODg4ODg4ODg4ODg4O
        Dg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg7/wAARCAA4ADgDASIAAhEBAxEB/8QAHwAAAQUB
        AQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1Fh
        ByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNk
        ZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL
        /8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYk
        NOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImK
        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
</value>
  </data>
</root>